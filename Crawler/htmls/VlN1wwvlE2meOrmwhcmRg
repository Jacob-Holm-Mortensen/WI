<!--[if lt IE 9]><script>var e = ("abbr,article,aside,audio,canvas,datalist,details,figure,figcaption,footer,header,hgroup,mark,menu,meter,nav,output,progress,section,time,video").split(',');for (var i = 0; i < e.length; i++) {document.createElement(e[i]);}</script><![endif]-->
<script type="text/javascript">
if(typeof CBSi=="undefined"||!CBSi){var CBSi={}}CBSi.namespace=function(){var b=arguments,g=null,e,c,f;for(e=0;e<b.length;e=e+1){f=b[e].split(".");g=CBSi;for(c=(f[0]=="CBSi")?1:0;c<f.length;c=c+1){g[f[c]]=g[f[c]]||{};g=g[f[c]]}}return g};CBSi.extend=function(d,e,c){if(!e||!d){throw new Error("extend failed, please check that all dependencies are included.")}var b=function(){};b.prototype=e.prototype;d.prototype=new b();d.prototype.constructor=d;d.superclass=e.prototype;if(e.prototype.constructor==Object.prototype.constructor){e.prototype.constructor=e}if(c){for(var a in c){if(c.hasOwnProperty(a)){d.prototype[a]=c[a]}}}};CBSi.panel={overlayManager:undefined,create:function(c,b){if(!this.overlayManager){this.overlayManager=new YAHOO.widget.OverlayManager()}if(!b.strings){b.strings={}}if(!b.strings.close){b.strings.close=""}var a=new YAHOO.widget.Panel(c,b);this.overlayManager.register(a);return a}};CBSi.fireEvent=function(b,c){if(document.createEvent){var a=document.createEvent("HTMLEvents");a.initEvent(c,true,true);return !b.dispatchEvent(a)}else{var a=document.createEventObject();return b.fireEvent("on"+c,a)}};CBSi.log=function(){};if(window.console&&window.console.log){CBSi.log=function(){if(CBSi.debugmode===""){return}var a=[];for(var b=0;b<arguments.length;b++){a.push(arguments[b])}console.log(a)}}else{if(window&&window.console){window.console.log=function(){}}else{window.console={};window.console.log=function(){}}if(console){console.log=function(){}}else{console={};console.log=function(){}}}CBSi.jsRenvInit=function(a){for(var b in a){CBSi[b]=a[b]}return};
if (!CBSi.debugmode) CBSi.debugmode = ''; // For normandy--manually set if js only
</script>
<script id="jsRenv_script" type="text/javascript">CBSi.jsRenvInit({"takeoverIsBlank":0,"httpHost":"http://www.cbssports.com","project":"media","mediaHttpServer":"https://www.cbssports.com","pref":{"timezoneOffset":"4","timezoneAbbrev":"ET"},"feature":"helpcenter","league_abbr":"","arena":"other","imageServer":"https://sports.cbsimg.net","requestUri":"/help"});</script>
<script type='text/javascript' src='https://sports.cbsimg.net/js/yui/latest/yahoo-dom-event-connection-datasource-get-imageloader-animation-json-min.js'></script>
<script type='text/javascript' src='https://sports.cbsimg.net/js/jquery/jquery.1.8.2.min.js'></script>
<script type='text/javascript' src='https://sports.cbsimg.net/js/jquery/ui/jquery.1.9.2.custom.min.js'></script>
<script type='text/javascript' src='https://sports.cbsimg.net/js/global-min-v0086.js'></script>

<script>
//Dumping cookies that have been made browser/host only
(function($){
    //return;//Comment out to run code
    //List of domains to check and see if the cookie has with it
    var domains = ['.cbssports.com','.www.cbssports.com','www.cbssports.com','*.cbssports.com','cbssports.com', '.cbssports.com'];
    //List of the names of cookies to match
    var matches = ['CirclePoll','2013NCAAB','2013NFL','2013NCAAF'];
    //Loop throught the cookies and find the matches
    $.each(document.cookie.split(/; */), function()  {
        var splitCookie = this.split('=');
        for(m in matches){
            if(splitCookie[0].match(RegExp(matches[m]))){
                for(d in domains){
                    console.log(splitCookie[0], 'cookie removed');
                    //Try to delete the cookie with a domain and path
                    document.cookie= splitCookie[0] + "=; expires=Monday, 19 Aug 1996 05:00:00 GMT;domain=" + domains[d] + ";path=/";
                    //Try to delete the cookie without a domain and path
                    document.cookie= splitCookie[0] + "=; expires=Monday, 19 Aug 1996 05:00:00 GMT;";
                    //Try to delete the cookie without a path
                    document.cookie= splitCookie[0] + "=; expires=Monday, 19 Aug 1996 05:00:00 GMT;domain=" + domains[d] + ";";
                    //Try to delete the cookie without a domain
                    document.cookie= splitCookie[0] + "=; expires=Monday, 19 Aug 1996 05:00:00 GMT;path=/";
                }
            }
        }

    });
})($);
</script>





<script language="JavaScript">
<!--
var javascriptVersion1_1 = false;
var javascriptVersion1_2 = false;
var javascriptVersion1_3 = false;
// -->
</script>
<script language="JavaScript1.1">
<!--
javascriptVersion1_1 = true;
// -->
</script>
<script language="JavaScript1.2">
<!--
javascriptVersion1_2 = true;
// -->
</script>
<script language="JavaScript1.3">
<!--
javascriptVersion1_3 = true;
// -->
</script>
<script language="JavaScript">
<!--
// java script version
var jScriptVer;
if (javascriptVersion1_3) {jScriptVer = "version 1.3";}
else if (javascriptVersion1_2) {jScriptVer = "version 1.2";}
else if (javascriptVersion1_1) {jScriptVer = "version 1.1";}
else {jScriptVer = "version 1.0";}
// -->
</script>

<script language="JavaScript">
<!--
var res = window.screen.width+'x'+window.screen.height+'x'+window.screen.colorDepth;

var rptCookies = (navigator.cookieEnabled) ? "enabled" : "not enabled";

// java enabled
var java;
if (IE) {java = (navigator.javaEnabled()) ? "enabled" : "not enabled";}
else {java = (navigator.javaEnabled) ? "enabled" : "not enabled";}

// initialize global variables
var detectableWithVB = false;
var pluginFound = false;

function canDetectPlugins() {
    if( detectableWithVB || (navigator.plugins && navigator.plugins.length > 0) ) {
        return true;
    } else {
        return false;
    }
}
function detectFlash() {        
        var Flashver=''; var target=1;
    pluginFound = detectPlugin('Shockwave','Flash'); 
    // if not found, try to detect with VisualBasic
    if(!pluginFound && detectableWithVB) {
                pluginFound = detectActiveXControl('ShockwaveFlash.ShockwaveFlash.1');
                if (pluginFound) {
                        if (detectActiveXControl('ShockwaveFlash.ShockwaveFlash.1')) Flashver=1;
                        if (detectActiveXControl('ShockwaveFlash.ShockwaveFlash.2')) Flashver=2;
                        if (detectActiveXControl('ShockwaveFlash.ShockwaveFlash.3')) Flashver=3;
                        if (detectActiveXControl('ShockwaveFlash.ShockwaveFlash.4')) Flashver=4;
                        if (detectActiveXControl('ShockwaveFlash.ShockwaveFlash.5')) Flashver=5;
                        if (detectActiveXControl('ShockwaveFlash.ShockwaveFlash.6')) Flashver=6;
                        }
                return ( 'version ' + Flashver + ' detected');
                }
        return pluginFound;
        }

function detectDirector() { 
    pluginFound = detectPlugin('Shockwave','Director'); 
    // if not found, try to detect with VisualBasic
    if(!pluginFound && detectableWithVB) {
        pluginFound = detectActiveXControl('SWCtl.SWCtl.1');
    }
    // check for redirection
    return pluginFound;
}

function detectQuickTime() {
    pluginFound = detectPlugin('QuickTime');
    // if not found, try to detect with VisualBasic
    if(!pluginFound && detectableWithVB) {
        pluginFound = detectQuickTimeActiveXControl();
    }
    return pluginFound;
}

function detectReal() {
        var Realver='';
    pluginFound = detectPlugin('RealPlayer');
    // if not found, try to detect with VisualBasic
    if(!pluginFound && detectableWithVB) {
                pluginFound = (detectActiveXControl('rmocx.RealPlayer G2 Control') ||
                       detectActiveXControl('RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)') ||
                       detectActiveXControl('RealVideo.RealVideo(tm) ActiveX Control (32-bit)'));
                           
                if (detectActiveXControl('RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)')) Realver='RealPlayer';
                if (detectActiveXControl('RealVideo.RealVideo(tm) ActiveX Control (32-bit)')) Realver='RealVideo';
                if (detectActiveXControl('rmocx.RealPlayer G2 Control')) Realver='G2 Control';
                return (Realver + ' was detected');
        }                
        return pluginFound;
}

function detectWindowsMedia() {
        var MPver=''; var target=1;
    pluginFound = detectPlugin('Windows Media Player');
    // if not found, try to detect with VisualBasic
    if(!pluginFound && detectableWithVB) {
                pluginFound = detectActiveXControl('MediaPlayer.MediaPlayer.1');
                }
        return pluginFound;
        }

        
function detectPlugin() {
    // allow for multiple checks in a single pass
    var daPlugins = detectPlugin.arguments;
    // consider pluginFound to be false until proven true
    var pluginFound = false;
    // if plugins array is there and not fake
    if (navigator.plugins && navigator.plugins.length > 0) {
        var pluginsArrayLength = navigator.plugins.length;
        // for each plugin...
        for (pluginsArrayCounter=0; pluginsArrayCounter < pluginsArrayLength; pluginsArrayCounter++ ) {
            // loop through all desired names and check each against the current plugin name
            var numFound = 0;
            for(namesCounter=0; namesCounter < daPlugins.length; namesCounter++) {
                // if desired plugin name is found in either plugin name or description
                if( (navigator.plugins[pluginsArrayCounter].name.indexOf(daPlugins[namesCounter]) >= 0) || 
                    (navigator.plugins[pluginsArrayCounter].description.indexOf(daPlugins[namesCounter]) >= 0) ) {
                    // this name was found
                    numFound++;
                }   
            }
            // now that we have checked all the required names against this one plugin,
            // if the number we found matches the total number provided then we were successful
            if(numFound == daPlugins.length) {
                pluginFound = true;
                // if we've found the plugin, we can stop looking through at the rest of the plugins
                break;
            }
        }
    }
    return pluginFound;
} // detectPlugin


// Here we write out the VBScript block for MSIE Windows
if ((navigator.userAgent.indexOf('MSIE') != -1) && (navigator.userAgent.indexOf('Win') != -1)) {
    document.writeln('<script language="VBscript">');

    document.writeln('\'do a one-time test for a version of VBScript that can handle this code');
    document.writeln('detectableWithVB = False');
    document.writeln('If ScriptEngineMajorVersion >= 2 then');
    document.writeln('  detectableWithVB = True');
    document.writeln('End If');

    document.writeln('\'this next function will detect most plugins');
    document.writeln('Function detectActiveXControl(activeXControlName)');
    document.writeln('  on error resume next');
    document.writeln('  detectActiveXControl = False');
    document.writeln('  If detectableWithVB Then');
    document.writeln('     detectActiveXControl = IsObject(CreateObject(activeXControlName))');
    document.writeln('  End If');
    document.writeln('End Function');

    document.writeln('\'and the following function handles QuickTime');
    document.writeln('Function detectQuickTimeActiveXControl()');
    document.writeln('  on error resume next');
    document.writeln('  detectQuickTimeActiveXControl = False');
    document.writeln('  If detectableWithVB Then');
    document.writeln('    detectQuickTimeActiveXControl = False');
    document.writeln('    hasQuickTimeChecker = false');
    document.writeln('    Set hasQuickTimeChecker = CreateObject("QuickTimeCheckObject.QuickTimeCheck.1")');
    document.writeln('    If IsObject(hasQuickTimeChecker) Then');
    document.writeln('      If hasQuickTimeChecker.IsQuickTimeAvailable(0) Then ');
    document.writeln('        detectQuickTimeActiveXControl = True');
    document.writeln('      End If');
    document.writeln('    End If');
    document.writeln('  End If');
    document.writeln('End Function');

    document.writeln('</scr' + 'ipt>');
}

var shwave = 'not detected';
var flash = 'not detected';
var qcktime = 'not detected';
var rlplayer = 'not detected';
var wmedia = 'not detected';

if(canDetectPlugins()) {
        shwave =  detectDirector();
        flash = detectFlash();
        qcktime = detectQuickTime();
        rlplayer = detectReal();
        wmedia = detectWindowsMedia();
}
var referurl = "" || "";
var nextpage = "";
var source_page = "help";

 window.location.href = '/help/rnt/pass_data?referurl=' + referurl + '&source_page=' + source_page + '&nextpage=' + nextpage + '&java_status=' + java + '&cookie_status=' + rptCookies + '&js_ver=' + jScriptVer + '&resolution=' + res + '&shwave=' + shwave + '&flash=' + flash + '&quicktime=' + qcktime + '&realplayer=' + rlplayer + '&wmedia=' + wmedia ;

// -->
</script>

<script language="javascript">
window.h_link.focus();
</script>

<!-- Page build info: WdyfxwoZUNwAADx7xS4 'ws5090.tm.cbsig.net' 15483 20171010 6:24:07 /spln/local/media/cache/full/spln/86/%2Fhelp -->
